local LibraryName = "Notification Library"
local NotificationLibrary = {}
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local CoreGui = Players.LocalPlayer:WaitForChild("PlayerGui")
local library
local templateFolder
local canvas
local soundEnabled = true -- Enable or disable sound notifications

function NotificationLibrary:Load()
    library = game:GetObjects("rbxassetid://15133757123")[1]
    templateFolder = library.Templates
    canvas = library.list
    library.Name = LibraryName
    library.Parent = CoreGui
end

function NotificationLibrary:SendNotification(Mode, Text, Duration, CustomColor, Icon, Sound)
    local libraryCore = CoreGui:FindFirstChild(LibraryName)
    if not libraryCore then
        NotificationLibrary:Load()
    else
        library = libraryCore
        templateFolder = library.Templates
        canvas = library.list
    end

    if templateFolder:FindFirstChild(Mode) then
        task.spawn(function()
            local success, err = pcall(function()
                local Notification = templateFolder:WaitForChild(Mode):Clone()
                local filler = Notification.Filler
                local bar = Notification.bar
                Notification.Header.Text = Text

                -- Setting custom color if provided
                if CustomColor then
                    Notification.BackgroundColor3 = CustomColor
                end
                
                -- Adding an icon if provided
                if Icon then
                    local iconImage = Instance.new("ImageLabel")
                    iconImage.Name = "Icon"
                    iconImage.Image = Icon
                    iconImage.Size = UDim2.new(0, 24, 0, 24)
                    iconImage.Position = UDim2.new(0, 5, 0, (Notification.Size.Y.Offset - 24) / 2)
                    iconImage.BackgroundTransparency = 1
                    iconImage.Parent = Notification
                end
                
                -- Adding aesthetic improvements
                local corner = Instance.new("UICorner")
                corner.CornerRadius = UDim.new(0, 8)
                corner.Parent = Notification
                
                local shadow = Instance.new("ImageLabel")
                shadow.Name = "Shadow"
                shadow.AnchorPoint = Vector2.new(0.5, 0.5)
                shadow.BackgroundTransparency = 1
                shadow.Position = UDim2.new(0.5, 0, 0.5, 4)
                shadow.Size = UDim2.new(1, 12, 1, 12)
                shadow.Image = "rbxassetid://1316045217"
                shadow.ImageColor3 = Color3.new(0, 0, 0)
                shadow.ImageTransparency = 0.7
                shadow.ZIndex = Notification.ZIndex - 1
                shadow.Parent = Notification
                
                local gradient = Instance.new("UIGradient")
                gradient.Color = ColorSequence.new(Color3.new(1, 1, 1), Color3.new(0.9, 0.9, 0.9))
                gradient.Parent = Notification

                Notification.Visible = true
                Notification.Parent = canvas

                Notification.Size = UDim2.new(0, 0, 0.087, 0)
                filler.Size = UDim2.new(1, 0, 1, 0)
        
                local T1 = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
                local T2 = TweenInfo.new(Duration, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
                local T3 = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
            
                TweenService:Create(Notification, T1, {Size = UDim2.new(1, 0, 0.087, 0)}):Play()
                task.wait(0.3)
                TweenService:Create(filler, T3, {Size = UDim2.new(0.011, 0, 1, 0)}):Play()
                TweenService:Create(bar, T2, {Size = UDim2.new(1, 0, 0.05, 0)}):Play()
            
                -- Play sound if enabled and provided
                if soundEnabled and Sound then
                    local sound = Instance.new("Sound")
                    sound.SoundId = Sound
                    sound.Parent = Notification
                    sound:Play()
                end
                
                task.wait(Duration)
            
                TweenService:Create(filler, T1, {Size = UDim2.new(1, 0, 1, 0)}):Play()
                task.wait(0.3)
                TweenService:Create(Notification, T3, {Size = UDim2.new(0, 0, 0.087, 0)}):Play()
                task.wait(0.3)
                Notification:Destroy()
            end)
            if not success then
                warn("There was an error while trying to create a notification!")
                warn(err)
            end
        end)
    else
        warn("Invalid theme applied")
    end
end

function NotificationLibrary:EnableSound(enable)
    soundEnabled = enable
end

return NotificationLibrary
